apiVersion: v1
kind: Template
metadata:
  name: mywebapp
  annotations:
    iconClass: icon-jboss
    tags: nodejs, react, web app
    template.openshift.io/provider-display-name: "Red Hat, Inc."
    description: Basic react application to demonstrate OpenShift chained build deployments
parameters:
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    required: true
  - name: SOURCE_REPOSITORY_REF
    description: The branch name for the application
    displayName: Source Branch
    value: master
    required: true
  - name: SOURCE_REPOSITORY_DIR
    description: The location within the source repo of the application
    displayName: Source Directory
    value: .
    required: true
  - name: OUTPUT_DIR
    description: The location of the compiled static files from your web apps builder
    displayName: Output Directory
    value: build
    required: false
  - name: GITHUB_WEBHOOK_SECRET
    description: A secret string used to configure the GitHub webhook.
    displayName: GitHub Webhook Secret
    required: true
    from: '[a-zA-Z0-9]{40}'
    generate: expression
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: mywebapp-image
    labels:
      app: mywebapp
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: mywebapp-runtime
    labels:
      app: mywebapp
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: web-app-builder
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: nodeshift/centos7-s2i-web-app:10.x
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: nginx
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: 'centos/nginx-112-centos7:latest'
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: mywebapp-build
    labels:
      app: mywebapp
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: mywebapp-image:latest
    postCommit: {}
    resources: {}
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      contextDir: ${SOURCE_REPOSITORY_DIR}
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: OUTPUT_DIR
            value: ${OUTPUT_DIR}
        from:
          kind: ImageStreamTag
          name: web-app-builder:latest
        incremental: true
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: mywebapp-runtime-build
    labels:
      app: mywebapp
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: mywebapp-runtime:latest
    source:
      type: Image
      images:
        - from:
            kind: ImageStreamTag
            name: mywebapp-image:latest
          paths:
            - destinationDir: .
              sourcePath: /opt/app-root/output/.
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nginx:latest
        incremental: true
      type: Source
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: mywebapp-image:latest
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: mywebapp
    name: mywebapp
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      app: mywebapp
    strategy:
      rollingParams:
        timeoutSeconds: 3600
      type: Rolling
    template:
      metadata:
        labels:
          app: mywebapp
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: mywebapp-runtime
          imagePullPolicy: IfNotPresent
          name: mywebapp-runtime
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
      metadata:
        labels:
          app: mywebapp
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - mywebapp-runtime
          from:
            kind: ImageStreamTag
            name: 'mywebapp-runtime:latest'
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: mywebapp
    name: mywebapp
  spec:
    ports:
    - name: http
      port: 8080
    selector:
      app: mywebapp
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: mywebapp
    name: mywebapp
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: mywebapp